# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on: [push]
# on:
#   push:
#     branches: [$default-branch]
#   pull_request:
#     branches: [$default-branch]

jobs:
  # Job: Lint #####################################################################################
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14"

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  # Job: Build ####################################################################################
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14"

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build:prod

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: www
          path: www

  # Job: Package Linux ############################################################################
  package-linux:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: www

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm ci
        working-directory: electron

      - name: Package
        run: npm run electron:build-linux
        working-directory: electron

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-linux
          path: electron/dist/*.deb
  # Job: Package Windows ############################################################################
  # package-windows:
  #   needs: build
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: www
  #     - name: Use Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: "14"
  #     - name: Install dependencies
  #       run: npm ci
  #       working-directory: electron
  #     - name: Package
  #       run: npm run electron:build-windows
  #       working-directory: electron
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: dist-windows
  #         path: electron/dist/*.exe
  # Job: Package Mac ############################################################################
  # package-macos:
  #   needs: build
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: www
  #     - name: Use Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: "14"
  #     - name: Install dependencies
  #       run: npm ci
  #       working-directory: electron
  #     - name: Package
  #       run: npm run electron:build-mac
  #       working-directory: electron
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: dist-mac
  #         path: electron/dist/*.dng
